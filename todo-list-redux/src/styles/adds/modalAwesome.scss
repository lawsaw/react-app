$modalAwesome: (
  'container': '.modalAwesome',
  'maxModals': 4
);

#{map-get($modalAwesome, 'container')} {

  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  align-content: center;
  flex-direction: row;
  flex-wrap: nowrap;
  overflow: hidden;

  &-bg {

    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(black, 0.3);

    //animation-duration: 0.3s;
    animation-iteration-count: 1;
    animation-timing-function: linear;
    animation-delay: 0s;
    animation-direction: normal;
    animation-play-state: running;
    animation-fill-mode: both;

  }

  &-close {

    position: absolute;
    right: 0;
    top: 0;

  }

  &-win {

    position: relative;
    max-width: 500px;
    margin: 0 auto;
    padding: 20px;
    width: 100%;

    &-header {

      padding: 20px;
      text-transform: uppercase;
      color: #fff;

    }

    &-body {

      padding: 20px;
      background-color: #fff;

    }

  }

}


@keyframes opacityIn {
  from { opacity: 0; }
  to { opacity: 1; }
}


@keyframes opacityOut {
  from { opacity: 1; }
  to { opacity: 0; }
}


#{map-get($modalAwesome, 'container')} {

  &--appearing #{map-get($modalAwesome, 'container')}-bg { animation-name: opacityIn; }
  &--disappearing #{map-get($modalAwesome, 'container')}-bg { animation-name: opacityOut; }



  &--appearing #{map-get($modalAwesome, 'container')}-win {

    transition: all 0s ease 0s;
    transform-origin: center center;
    transform: scale(0.5);
    opacity: 0;

  }

  &--appearing#{map-get($modalAwesome, 'container')}--zoomIn #{map-get($modalAwesome, 'container')}-win {

    transform: scale(1);
    opacity: 1;

  }




  &--disappearing#{map-get($modalAwesome, 'container')}--toRight #{map-get($modalAwesome, 'container')}-win {

    transform: translate3d(100%, 0, 0);
    opacity: 0;

  }

}




#modal-root {



  //@for $i from 2 through map_get($modalAwesome, 'maxModals') {
  //
  //  &[counter='#{$i}'] {
  //    $test: $i*1 - 1;
  //    @for $r from 1 through $i - 1 {
  //
  //      #{map-get($modalAwesome, 'container')}:nth-child(#{$r}) {
  //        transform: scale( (map_get($modalAwesome, 'maxModals')- $i - $r) * 1 / map_get($modalAwesome, 'maxModals') );
  //      }
  //
  //    }
  //
  //    #{map-get($modalAwesome, 'container')}:nth-child(#{$i}) {
  //        transform: scale(1);
  //        filter: blur(0px);
  //      }
  //
  //  }
  //
  //}


  &[counter='2'] {
    #{map-get($modalAwesome, 'container')}:nth-child(1) {
      transform: scale( (map_get($modalAwesome, 'maxModals')-1) * 1 / map_get($modalAwesome, 'maxModals') );
    }
    #{map-get($modalAwesome, 'container')}:nth-child(2) {
      transform: scale(1);
      filter: blur(0px);
    }
  }
  &[counter='3'] {
    #{map-get($modalAwesome, 'container')}:nth-child(1) {
      transform: scale( (map_get($modalAwesome, 'maxModals')-2) * 1 / map_get($modalAwesome, 'maxModals') );
    }
    #{map-get($modalAwesome, 'container')}:nth-child(2) {
      transform: scale( (map_get($modalAwesome, 'maxModals')-1) * 1 / map_get($modalAwesome, 'maxModals') );
    }
    #{map-get($modalAwesome, 'container')}:nth-child(3) {
      transform: scale(1);
      filter: blur(0px);
    }
  }
  &[counter='4'] {
    #{map-get($modalAwesome, 'container')}:nth-child(1) {
      transform: scale( (map_get($modalAwesome, 'maxModals')-3) * 1 / map_get($modalAwesome, 'maxModals') );
    }
    #{map-get($modalAwesome, 'container')}:nth-child(2) {
      transform: scale( (map_get($modalAwesome, 'maxModals')-2) * 1 / map_get($modalAwesome, 'maxModals') );
    }
    #{map-get($modalAwesome, 'container')}:nth-child(3) {
      transform: scale( (map_get($modalAwesome, 'maxModals')-1) * 1 / map_get($modalAwesome, 'maxModals') );
    }
    #{map-get($modalAwesome, 'container')}:nth-child(4) {
      transform: scale(1);
      filter: blur(0px);
    }
  }


}




